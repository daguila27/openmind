_PropertyPrefetchOptions = function () {
  this.none = 0;
  this.musicProperties = 1;
  this.videoProperties = 2;
  this.imageProperties = 3;
  this.documentProperties = 4;
  this.basicProperties = 5;
}
exports.PropertyPrefetchOptions = new _PropertyPrefetchOptions();

_ThumbnailType = function () {
  this.image = 0;
  this.icon = 1;
}
exports.ThumbnailType = new _ThumbnailType();

_ThumbnailMode = function () {
  this.picturesView = 0;
  this.videosView = 1;
  this.musicView = 2;
  this.documentsView = 3;
  this.listView = 4;
  this.singleItem = 5;
}
exports.ThumbnailMode = new _ThumbnailMode();

_ThumbnailOptions = function () {
  this.none = 0;
  this.returnOnlyIfCached = 1;
  this.resizeThumbnail = 2;
  this.useCurrentScale = 3;
}
exports.ThumbnailOptions = new _ThumbnailOptions();

_PhotoOrientation = function () {
  this.unspecified = 0;
  this.normal = 1;
  this.flipHorizontal = 2;
  this.rotate180 = 3;
  this.flipVertical = 4;
  this.transpose = 5;
  this.rotate270 = 6;
  this.transverse = 7;
  this.rotate90 = 8;
}
exports.PhotoOrientation = new _PhotoOrientation();

_VideoOrientation = function () {
  this.normal = 0;
  this.rotate90 = 1;
  this.rotate180 = 2;
  this.rotate270 = 3;
}
exports.VideoOrientation = new _VideoOrientation();

StorageItemThumbnail = (function () {
  var cls = function StorageItemThumbnail() {
    this.size = new Number();
    this.canRead = new Boolean();
    this.canWrite = new Boolean();
    this.position = new Number();
    this.contentType = new String();
    this.originalHeight = new Number();
    this.originalWidth = new Number();
    this.returnedSmallerCachedSize = new Boolean();
    this.type = new ThumbnailType();
  };
  

  cls.prototype.readAsync = function readAsync(buffer, count, options, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="buffer" type="Object">A param.</param>
    /// <param name="count" type="Number">A param.</param>
    /// <param name="options" type="Number">A param.</param>
    /// </signature>
  }


  cls.prototype.writeAsync = function writeAsync(buffer, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="buffer" type="Object">A param.</param>
    /// </signature>
  }


  cls.prototype.flushAsync = function flushAsync(callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// </signature>
  }


  cls.prototype.getInputStreamAt = function getInputStreamAt(position) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="position" type="Number">A param.</param>
    /// <returns type="Object" />
    /// </signature>
    return new Object();
  }


  cls.prototype.getOutputStreamAt = function getOutputStreamAt(position) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="position" type="Number">A param.</param>
    /// <returns type="Object" />
    /// </signature>
    return new Object();
  }


  cls.prototype.seek = function seek(position) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="position" type="Number">A param.</param>
    /// </signature>
  }


  cls.prototype.cloneStream = function cloneStream() {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <returns type="Object" />
    /// </signature>
    return new Object();
  }


  cls.prototype.close = function close() {
}


  return cls;
}) ();
exports.StorageItemThumbnail = StorageItemThumbnail;

IStorageItemExtraProperties = (function () {
  var cls = function IStorageItemExtraProperties() {
  };
  

  cls.prototype.retrievePropertiesAsync = function retrievePropertiesAsync(propertiesToRetrieve, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="propertiesToRetrieve" type="Object">A param.</param>
    /// </signature>
  }


  cls.prototype.savePropertiesAsync = function savePropertiesAsync(propertiesToSave, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="propertiesToSave" type="Object">A param.</param>
    /// </signature>
  }

cls.prototype.savePropertiesAsync = function savePropertiesAsync(callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// </signature>
  }


  return cls;
}) ();
exports.IStorageItemExtraProperties = IStorageItemExtraProperties;

MusicProperties = (function () {
  var cls = function MusicProperties() {
    this.year = new Number();
    this.trackNumber = new Number();
    this.title = new String();
    this.subtitle = new String();
    this.rating = new Number();
    this.publisher = new String();
    this.artist = new String();
    this.albumArtist = new String();
    this.album = new String();
    this.bitrate = new Number();
    this.composers = new Object();
    this.conductors = new Object();
    this.duration = new Number();
    this.genre = new Object();
    this.producers = new Object();
    this.writers = new Object();
  };
  

  cls.prototype.retrievePropertiesAsync = function retrievePropertiesAsync(propertiesToRetrieve, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="propertiesToRetrieve" type="Object">A param.</param>
    /// </signature>
  }


  cls.prototype.savePropertiesAsync = function savePropertiesAsync(propertiesToSave, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="propertiesToSave" type="Object">A param.</param>
    /// </signature>
  }

cls.prototype.savePropertiesAsync = function savePropertiesAsync(callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// </signature>
  }


  return cls;
}) ();
exports.MusicProperties = MusicProperties;

VideoProperties = (function () {
  var cls = function VideoProperties() {
    this.year = new Number();
    this.title = new String();
    this.subtitle = new String();
    this.rating = new Number();
    this.publisher = new String();
    this.bitrate = new Number();
    this.directors = new Object();
    this.duration = new Number();
    this.height = new Number();
    this.keywords = new Object();
    this.latitude = new Number();
    this.longitude = new Number();
    this.orientation = new VideoOrientation();
    this.producers = new Object();
    this.width = new Number();
    this.writers = new Object();
  };
  

  cls.prototype.retrievePropertiesAsync = function retrievePropertiesAsync(propertiesToRetrieve, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="propertiesToRetrieve" type="Object">A param.</param>
    /// </signature>
  }


  cls.prototype.savePropertiesAsync = function savePropertiesAsync(propertiesToSave, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="propertiesToSave" type="Object">A param.</param>
    /// </signature>
  }

cls.prototype.savePropertiesAsync = function savePropertiesAsync(callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// </signature>
  }


  return cls;
}) ();
exports.VideoProperties = VideoProperties;

ImageProperties = (function () {
  var cls = function ImageProperties() {
    this.title = new String();
    this.rating = new Number();
    this.dateTaken = new Date();
    this.cameraModel = new String();
    this.cameraManufacturer = new String();
    this.height = new Number();
    this.keywords = new Object();
    this.latitude = new Number();
    this.longitude = new Number();
    this.orientation = new PhotoOrientation();
    this.peopleNames = new Object();
    this.width = new Number();
  };
  

  cls.prototype.retrievePropertiesAsync = function retrievePropertiesAsync(propertiesToRetrieve, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="propertiesToRetrieve" type="Object">A param.</param>
    /// </signature>
  }


  cls.prototype.savePropertiesAsync = function savePropertiesAsync(propertiesToSave, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="propertiesToSave" type="Object">A param.</param>
    /// </signature>
  }

cls.prototype.savePropertiesAsync = function savePropertiesAsync(callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// </signature>
  }


  return cls;
}) ();
exports.ImageProperties = ImageProperties;

DocumentProperties = (function () {
  var cls = function DocumentProperties() {
    this.title = new String();
    this.comment = new String();
    this.author = new Object();
    this.keywords = new Object();
  };
  

  cls.prototype.retrievePropertiesAsync = function retrievePropertiesAsync(propertiesToRetrieve, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="propertiesToRetrieve" type="Object">A param.</param>
    /// </signature>
  }


  cls.prototype.savePropertiesAsync = function savePropertiesAsync(propertiesToSave, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="propertiesToSave" type="Object">A param.</param>
    /// </signature>
  }

cls.prototype.savePropertiesAsync = function savePropertiesAsync(callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// </signature>
  }


  return cls;
}) ();
exports.DocumentProperties = DocumentProperties;

StorageItemContentProperties = (function () {
  var cls = function StorageItemContentProperties() {
  };
  

  cls.prototype.getMusicPropertiesAsync = function getMusicPropertiesAsync(callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// </signature>
  }


  cls.prototype.getVideoPropertiesAsync = function getVideoPropertiesAsync(callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// </signature>
  }


  cls.prototype.getImagePropertiesAsync = function getImagePropertiesAsync(callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// </signature>
  }


  cls.prototype.getDocumentPropertiesAsync = function getDocumentPropertiesAsync(callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// </signature>
  }


  cls.prototype.retrievePropertiesAsync = function retrievePropertiesAsync(propertiesToRetrieve, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="propertiesToRetrieve" type="Object">A param.</param>
    /// </signature>
  }


  cls.prototype.savePropertiesAsync = function savePropertiesAsync(propertiesToSave, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="propertiesToSave" type="Object">A param.</param>
    /// </signature>
  }

cls.prototype.savePropertiesAsync = function savePropertiesAsync(callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// </signature>
  }


  return cls;
}) ();
exports.StorageItemContentProperties = StorageItemContentProperties;

BasicProperties = (function () {
  var cls = function BasicProperties() {
    this.dateModified = new Date();
    this.itemDate = new Date();
    this.size = new Number();
  };
  

  cls.prototype.retrievePropertiesAsync = function retrievePropertiesAsync(propertiesToRetrieve, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="propertiesToRetrieve" type="Object">A param.</param>
    /// </signature>
  }


  cls.prototype.savePropertiesAsync = function savePropertiesAsync(propertiesToSave, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="propertiesToSave" type="Object">A param.</param>
    /// </signature>
  }

cls.prototype.savePropertiesAsync = function savePropertiesAsync(callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// </signature>
  }


  return cls;
}) ();
exports.BasicProperties = BasicProperties;

