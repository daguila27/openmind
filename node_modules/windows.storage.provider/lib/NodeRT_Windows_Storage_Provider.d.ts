declare module "windows.storage.provider" {
  export enum CachedFileTarget {
    local,
    remote,
  }

  export enum UIStatus {
    unavailable,
    hidden,
    visible,
    complete,
  }

  export enum FileUpdateStatus {
    incomplete,
    complete,
    userInputNeeded,
    currentlyUnavailable,
    failed,
    completeAndRenamed,
  }

  export enum CachedFileOptions {
    none,
    requireUpdateOnAccess,
    useCachedFileWhenOffline,
    denyAccessWhenOffline,
  }

  export enum ReadActivationMode {
    notNeeded,
    beforeAccess,
  }

  export enum WriteActivationMode {
    readOnly,
    notNeeded,
    afterWrite,
  }

  export class CachedFileUpdaterUI {
    title: String;
    uIStatus: UIStatus;
    updateTarget: CachedFileTarget;
    constructor();

    addListener(type: "FileUpdateRequested", listener: (ev: Event) => void): void ;
    removeListener(type: "FileUpdateRequested", listener: (ev: Event) => void): void ;
    on(type: "FileUpdateRequested", listener: (ev: Event) => void): void ;
    off(type: "FileUpdateRequested", listener: (ev: Event) => void): void ;
    
    addListener(type: "UIRequested", listener: (ev: Event) => void): void ;
    removeListener(type: "UIRequested", listener: (ev: Event) => void): void ;
    on(type: "UIRequested", listener: (ev: Event) => void): void ;
    off(type: "UIRequested", listener: (ev: Event) => void): void ;
    
    addListener(type: string, listener: (ev: Event) => void): void ;
    removeListener(type: string, listener: (ev: Event) => void): void ;
    on(type: string, listener: (ev: Event) => void): void ;
    off(type: string, listener: (ev: Event) => void): void ;
    

  }

  export class FileUpdateRequestedEventArgs {
    request: FileUpdateRequest;
    constructor();

  }

  export class FileUpdateRequest {
    status: FileUpdateStatus;
    contentId: String;
    file: Object;
    constructor();

    getDeferral(): FileUpdateRequestDeferral;

    updateLocalFile(value: Object): void;

  }

  export class FileUpdateRequestDeferral {
    constructor();

    complete(): void;

  }

  export class CachedFileUpdater {
    constructor();

    static setUpdateInformation(file: Object, contentId: String, readMode: ReadActivationMode, writeMode: WriteActivationMode, options: CachedFileOptions): void;


  }

}



